{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    console.log(JSON.stringify(order));\n    order['shippingAddress']['shippingPrice'] = order['shippingPrice'];\n    console.log(order['shippingAddress']);\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    order['shippingAddress']['shippingPrice'] = order['shippingPrice'];\n    console.log(order['shippingAddress']);\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}/`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n\n    // dispatch({\n    //     type: CART_CLEAR_ITEMS,\n    //     payload: data\n    // })\n    // localStorage.removeItem('cartItems')\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CART_CLEAR_ITEMS","axios","createOrder","order","dispatch","getState","console","log","JSON","stringify","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","detail","message","getOrderDetails","id","get"],"sources":["E:/Github/django_dewolster_V2/frontend/src/actions/orderActions.js"],"sourcesContent":["import { \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        console.log(JSON.stringify(order))\r\n        order['shippingAddress']['shippingPrice'] = order['shippingPrice']\r\n        console.log(order['shippingAddress'])\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n        \r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        order['shippingAddress']['shippingPrice'] = order['shippingPrice']\r\n        console.log(order['shippingAddress'])\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n        \r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        // dispatch({\r\n        //     type: CART_CLEAR_ITEMS,\r\n        //     payload: data\r\n        // })\r\n        // localStorage.removeItem('cartItems')\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}