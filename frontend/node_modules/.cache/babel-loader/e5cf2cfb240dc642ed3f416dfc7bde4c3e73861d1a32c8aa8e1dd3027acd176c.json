{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\django_dewolster_V2\\\\frontend\\\\src\\\\screens\\\\ShippingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShippingScreen() {\n  _s();\n  let navigate = useNavigate();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postCode, setPostCode] = useState(shippingAddress.postCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log('Submitted');\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter address\",\n          value: address ? address : '',\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter city\",\n          value: city ? city : '',\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Post code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter postcode\",\n          value: postCode ? postCode : '',\n          onChange: e => setPostCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter country\",\n          value: country ? country : '',\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-3\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ShippingScreen, \"4GhEyxPRMqYVG0x/vxJJp9zOY2Q=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = ShippingScreen;\nexport default ShippingScreen;\nvar _c;\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Form","Button","useDispatch","useSelector","FormContainer","jsxDEV","_jsxDEV","ShippingScreen","_s","navigate","cart","state","shippingAddress","address","setAddress","city","setCity","postCode","setPostCode","country","setCountry","submitHandler","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","required","type","placeholder","value","onChange","target","variant","className","_c","$RefreshReg$"],"sources":["E:/Github/django_dewolster_V2/frontend/src/screens/ShippingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nfunction ShippingScreen() {\r\n\r\n    let navigate = useNavigate()\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postCode, setPostCode] = useState(shippingAddress.postCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Submitted')\r\n    }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n      <Form.Group controlId='address'>\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control \r\n              required\r\n              type='text' \r\n              placeholder='Enter address' \r\n              value={address ? address : ''} \r\n              onChange={(e) => setAddress(e.target.value)}>\r\n              </Form.Control>\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId='city'>\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control \r\n              required\r\n              type='text' \r\n              placeholder='Enter city' \r\n              value={city ? city : ''} \r\n              onChange={(e) => setCity(e.target.value)}>\r\n              </Form.Control>\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId='postCode'>\r\n              <Form.Label>Post code</Form.Label>\r\n              <Form.Control \r\n              required\r\n              type='text' \r\n              placeholder='Enter postcode' \r\n              value={postCode ? postCode : ''} \r\n              onChange={(e) => setPostCode(e.target.value)}>\r\n              </Form.Control>\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId='country'>\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control \r\n              required\r\n              type='text' \r\n              placeholder='Enter country' \r\n              value={country ? country : ''} \r\n              onChange={(e) => setCountry(e.target.value)}>\r\n              </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary' className='mt-3'>\r\n            Next\r\n          </Button>\r\n\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}