{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { topRatedReducer, productReviewCreateReducer, productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userUpdateReducer, userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers';\nimport { orderDeliverReducer, orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productCreate: productCreateReducer,\n  productDetails: productDetailsReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  productReviewCreate: productReviewCreateReducer,\n  topRated: topRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","topRatedReducer","productReviewCreateReducer","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userUpdateReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","orderDeliverReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","reducer","productList","productCreate","productDetails","productUpdate","productDelete","productReviewCreate","topRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["E:/Github/django_dewolster_V2/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { thunk } from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { topRatedReducer, productReviewCreateReducer, productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userUpdateReducer, userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers'\r\nimport { orderDeliverReducer, orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productCreate: productCreateReducer,\r\n    productDetails: productDetailsReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    topRated: topRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo:userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,eAAe,EAAEC,0BAA0B,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAQ,4BAA4B;AACrM,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,iBAAiB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,wBAAwB,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,yBAAyB;AACpL,SAASC,mBAAmB,EAAEC,kBAAkB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAE9J,MAAMC,OAAO,GAAGzB,eAAe,CAAC;EAC5B0B,WAAW,EAAEpB,kBAAkB;EAC/BqB,aAAa,EAAElB,oBAAoB;EACnCmB,cAAc,EAAErB,qBAAqB;EACrCsB,aAAa,EAAEnB,oBAAoB;EACnCoB,aAAa,EAAEtB,oBAAoB;EACnCuB,mBAAmB,EAAE1B,0BAA0B;EAC/C2B,QAAQ,EAAE5B,eAAe;EACzB6B,IAAI,EAAEtB,WAAW;EACjBuB,SAAS,EAAErB,gBAAgB;EAC3BsB,YAAY,EAAErB,mBAAmB;EACjCsB,WAAW,EAAErB,kBAAkB;EAC/BsB,iBAAiB,EAAErB,wBAAwB;EAC3CsB,QAAQ,EAAErB,eAAe;EACzBsB,UAAU,EAAErB,iBAAiB;EAC7BsB,UAAU,EAAE5B,iBAAiB;EAC7B6B,WAAW,EAAErB,kBAAkB;EAC/BsB,YAAY,EAAErB,mBAAmB;EACjCsB,QAAQ,EAAErB,eAAe;EACzBsB,YAAY,EAAEzB,mBAAmB;EACjC0B,WAAW,EAAEtB,kBAAkB;EAC/BuB,SAAS,EAAEtB;AACf,CAAC,CAAC;AAEF,MAAMuB,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAEtD,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAEvD,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAE5D,MAAMK,YAAY,GAAG;EACjBrB,IAAI,EAAE;IAAEsB,SAAS,EAAER,oBAAoB;IAAES,eAAe,EAAEH;EAA2B,CAAC;EACtFnB,SAAS,EAAE;IAAEuB,QAAQ,EAACL;EAAoB;AAC9C,CAAC;AAED,MAAMM,UAAU,GAAG,CAACxD,KAAK,CAAC;AAE1B,MAAMyD,KAAK,GAAG5D,WAAW,CAAC0B,OAAO,EAAE6B,YAAY,EAAEnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAU,CAAC,CAAC,CAAC;AAErG,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}